[gd_scene load_steps=5 format=2]

[ext_resource path="res://scripts/inspector_gadget/inspector_gadget.gd" type="Script" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Node

export(bool) var bool_value := true setget set_bool_value
export(int) var int_value := 1234 setget set_int_value
export(float) var float_value := PI setget set_float_value
export(String) var string_value := \"Foo Bar Baz Decafisbad\" setget set_string_value
export(Vector2) var vector2_value := Vector2(16.0, 9.0) setget set_vector2_value
export(Rect2) var rect2_value := Rect2(Vector2(4.0, 4.0), Vector2(16.0, 24.0)) setget set_rect2_value
export(Vector3) var vector3_value := Vector3(1.0, 2.0, 3.0) setget set_vector3_value
export(Transform2D) var transform2d_value := Transform2D(Vector2(1.0, 0.0), Vector2(0.0, 1.0), Vector2(24.0, 32.0)) setget set_transform2d_value
export(Plane) var plane_value := Plane(1.0, 0.0, 0.0, 10.0) setget set_plane_value
export(Quat) var quat_value := Quat(PI, 0.0, 0.0, 1.0) setget set_quat_value
export(Color) var color_value := Color.orangered setget set_color_value
export(AABB) var aabb_value := AABB(Vector3(10.0, 20.0, 30.0), Vector3(10.0, 15.0, 15.0)) setget set_aabb_value
export(Basis) var basis_value := Basis(Vector3.RIGHT, Vector3.UP, Vector3.FORWARD) setget set_basis_value
export(Transform) var transform_value := Transform(Basis(Vector3.RIGHT, Vector3.UP, Vector3.FORWARD), Vector3(20.0, 40.0, 60.0)) setget set_transform_value
export(RID) var rid_value setget set_rid_value

export(Array, String) var array_value := [
	true,
	12,
	140.5,
	\"Hello\",
	[1,2,3],
	[\"one\", \"two\", \"three\"]
] setget set_array_value

export(Dictionary) var dictionary_value := {
	\"foo\": \"foo string\",
	\"bar\": \"bar string\",
	\"baz\": \"baz string\",
} setget set_dictionary_value

export(PoolByteArray) var pool_byte_array_value := PoolByteArray([0, 1, 2, 3, 7, 15, 31, 63, 127, 255]) setget set_pool_byte_array_value
export(PoolIntArray) var pool_int_array_value := PoolIntArray([0, 100, 200, 300, 400, 500, 600, 65536]) setget set_pool_int_array_value
export(PoolRealArray) var pool_real_array_value := PoolRealArray([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]) setget set_pool_real_array_value
export(PoolStringArray) var pool_string_array_value := PoolStringArray([\"foo\", \"bar\", \"baz\"]) setget set_pool_string_array_value
export(PoolVector2Array) var pool_vector2_array_value := PoolVector2Array([Vector2.ZERO, Vector2.UP, Vector2.RIGHT, Vector2.ONE]) setget set_pool_vector2_array_value
export(PoolVector3Array) var pool_vector3_array_value := PoolVector3Array([Vector3.ZERO, Vector3.UP, Vector3.RIGHT, Vector3.BACK]) setget set_pool_vector3_array_value
export(PoolColorArray) var pool_color_array_value := PoolColorArray([Color.red, Color.green, Color.blue, Color.black, Color.white]) setget set_pool_color_array_value

export(Curve) var curve_value

func set_bool_value(new_bool_value: bool) -> void:
	if bool_value != new_bool_value:
		bool_value = new_bool_value
	print(\"set bool value: \", bool_value)

func set_int_value(new_int_value: int) -> void:
	if int_value != new_int_value:
		int_value = new_int_value
	print(\"set int value: \", int_value)

func set_float_value(new_float_value: float) -> void:
	if float_value != new_float_value:
		float_value = new_float_value
	print(\"set float value: \", float_value)

func set_string_value(new_string_value: String) -> void:
	if string_value != new_string_value:
		string_value = new_string_value
	print(\"set string value: \", string_value)

func set_vector2_value(new_vector2_value: Vector2) -> void:
	if vector2_value != new_vector2_value:
		vector2_value = new_vector2_value
	print(\"set vector2 value: \", vector2_value)

func set_rect2_value(new_rect2_value: Rect2) -> void:
	if rect2_value != new_rect2_value:
		rect2_value = new_rect2_value
	print(\"set rect2 value: \", rect2_value)

func set_vector3_value(new_vector3_value: Vector3) -> void:
	if vector3_value != new_vector3_value:
		vector3_value = new_vector3_value
	print(\"set vector3 value: \", vector3_value)

func set_transform2d_value(new_transform2d_value: Transform2D) -> void:
	if transform2d_value != new_transform2d_value:
		transform2d_value = new_transform2d_value
	print(\"set transform2d value: \", transform2d_value)

func set_plane_value(new_plane_value: Plane) -> void:
	if plane_value != new_plane_value:
		plane_value = new_plane_value
	print(\"set plane value: \", plane_value)

func set_quat_value(new_quat_value: Quat) -> void:
	if quat_value != new_quat_value:
		quat_value = new_quat_value
	print(\"set quat value: \", quat_value)

func set_color_value(new_color_value: Color) -> void:
	if color_value != new_color_value:
		color_value = new_color_value
	print(\"set color value: \", color_value)

func set_aabb_value(new_aabb_value: AABB) -> void:
	if aabb_value != new_aabb_value:
		aabb_value = new_aabb_value
	print(\"set aabb value: \", aabb_value)

func set_basis_value(new_basis_value: Basis) -> void:
	if basis_value != new_basis_value:
		basis_value = new_basis_value
	print(\"set basis value: \", basis_value)

func set_transform_value(new_transform_value: Transform) -> void:
	if transform_value != new_transform_value:
		transform_value = new_transform_value
	print(\"set transform value: \", transform_value)

func set_rid_value(new_rid_value: RID) -> void:
	if rid_value != new_rid_value:
		rid_value = new_rid_value
	print(\"set rid value: \", rid_value)

func set_array_value(new_array_value: Array) -> void:
	if array_value != new_array_value:
		array_value = new_array_value
	print(\"set array value: \", array_value)

func set_dictionary_value(new_dictionary_value: Dictionary) -> void:
	if dictionary_value != new_dictionary_value:
		dictionary_value = new_dictionary_value
	print(\"set dictionary value: \", dictionary_value)

func set_pool_byte_array_value(new_pool_byte_array_value: PoolByteArray) -> void:
	if pool_byte_array_value != new_pool_byte_array_value:
		pool_byte_array_value = new_pool_byte_array_value
	print(\"set pool byte array value: \", pool_byte_array_value)

func set_pool_int_array_value(new_pool_int_array_value: PoolIntArray) -> void:
	if pool_int_array_value != new_pool_int_array_value:
		pool_int_array_value = new_pool_int_array_value
	print(\"set pool int array value: \", pool_int_array_value)

func set_pool_real_array_value(new_pool_real_array_value: PoolRealArray) -> void:
	if pool_real_array_value != new_pool_real_array_value:
		pool_real_array_value = new_pool_real_array_value
	print(\"set pool real array value: \", pool_real_array_value)

func set_pool_string_array_value(new_pool_string_array_value: PoolStringArray) -> void:
	if pool_string_array_value != new_pool_string_array_value:
		pool_string_array_value = new_pool_string_array_value
	print(\"set pool string array value: \", pool_string_array_value)

func set_pool_vector2_array_value(new_pool_vector2_array_value: PoolVector2Array) -> void:
	if pool_vector2_array_value != new_pool_vector2_array_value:
		pool_vector2_array_value = new_pool_vector2_array_value
	print(\"set pool vector2 array value: \", pool_vector2_array_value)

func set_pool_vector3_array_value(new_pool_vector3_array_value: PoolVector3Array) -> void:
	if pool_vector3_array_value != new_pool_vector3_array_value:
		pool_vector3_array_value = new_pool_vector3_array_value
	print(\"set pool vector3 array value: \", pool_vector3_array_value)

func set_pool_color_array_value(new_pool_color_array_value: PoolColorArray) -> void:
	if pool_color_array_value != new_pool_color_array_value:
		pool_color_array_value = new_pool_color_array_value
	print(\"set pool color array value: \", pool_color_array_value)
"

[sub_resource type="Curve" id=2]
_data = [ Vector2( 0, 0 ), 0.0, 1.0, 0, 1, Vector2( 1, 1 ), 1.0, 0.0, 1, 0 ]

[sub_resource type="GDScript" id=3]
script/source = "extends Node

func change_property_begin(object: Object, property: String) -> void:
	print(\"change property begin: %s, %s, %s\" % [object, property, object[property]])

func change_property_end(object: Object, property: String) -> void:
	print(\"change property end: %s, %s, %s\" % [object, property, object[property]])
"

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TestProperties" type="Node" parent="."]
script = SubResource( 1 )
curve_value = SubResource( 2 )

[node name="ScrollContainer" type="ScrollContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="InspectorGadgetNew" type="MarginContainer" parent="ScrollContainer"]
margin_right = 948.0
margin_bottom = 4930.0
size_flags_horizontal = 3
size_flags_vertical = 3
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
node_path = NodePath("../../TestProperties")
resource_gadget_metadata = {

}

[node name="Node" type="Node" parent="."]
script = SubResource( 3 )
